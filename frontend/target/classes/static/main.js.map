{"version":3,"sources":["./src/app/users/users-dialog.component.ts","./src/app/users/users-dialog.component.html","./src/app/demo/demo.component.ts","./src/app/demo/demo.component.html","./src/app/oscars/oscars-datasource.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.service.ts","./src/app/users/users-datasource.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/oscars/oscars.component.ts","./src/app/oscars/oscars.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/demo/demo-datasource.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Inject, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UsersItem } from './users-datasource';\n\n@Component({\n  selector: 'app-users-dialog',\n  templateUrl: './users-dialog.component.html',\n  styleUrls: ['./users-dialog.component.css']\n})\nexport class UsersDialogComponent {\n\n  action:string;\n  local_data:any;\n  hide = true; \n\n  constructor(\n    public dialogRef: MatDialogRef<UsersDialogComponent>,\n    //@Optional() is used to prevent error if no data is passed\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: UsersItem) {\n    console.log(data);\n    this.local_data = {...data};\n    this.action = this.local_data.action;\n    delete this.local_data.action;\n  }\n\n  doAction(){\n    this.dialogRef.close({event:this.action,data:this.local_data});\n  }\n\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}","<h1 mat-dialog-title>Row Action :: <strong>{{action}}</strong></h1>\n<div mat-dialog-content class=\"dialog\" style=\"width: 400px;\">\n    <ng-tmplate *ngIf=\"action != 'Delete'; else elseTemplate\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <mat-form-field [style.width.%]=\"100\">\n                    <input placeholder=\"Username\" matInput [(ngModel)]=\"local_data.username\" autocomplete=\"disabled\">\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <mat-form-field [style.width.%]=\"100\">\n                    <input [type]=\"hide ? 'password' : 'text'\" placeholder=\"Password\" matInput [(ngModel)]=\"local_data.password\" autocomplete=\"new-password\">\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <mat-slide-toggle matInput [(ngModel)]=\"local_data.enabled\" style=\"padding-bottom: 1.25em;\">Enabled\n                </mat-slide-toggle>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <mat-form-field [style.width.%]=\"100\" appearance=\"fill\">\n                    <mat-label>Authorities</mat-label>\n                    <mat-select matInput [(ngModel)]=\"local_data.authorities\" multiple>\n                        <mat-option value=\"ROLE_USER\">User</mat-option>\n                        <mat-option value=\"ROLE_ADMIN\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n    </ng-tmplate>\n    <ng-template #elseTemplate>\n        Sure to delete <b>{{local_data.username}}</b>?\n    </ng-template>\n</div>\n<div mat-dialog-actions style=\"justify-content: flex-end;\">\n    <button mat-button (click)=\"doAction()\" mat-flat-button color=\"primary\">{{action}}</button>\n    <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\n</div>","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { DemoDataSource, DemoItem } from './demo-datasource';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<DemoItem>;\n  dataSource: DemoDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  constructor() {\n    this.dataSource = new DemoDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data?.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\">\n  </mat-paginator>\n</div>\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n// TODO: Replace this with your own data model type\nexport interface OscarsItem {\n  id: number;\n  title: string;\n  oscarYear: string;\n  studio: string;\n  award: string;\n  yearOfRelease: number;\n  movieTime: number;\n  genre: string;\n}\n\nexport interface PaginatedItem {\n  totalElements: number;\n  content: OscarsItem[];\n}\n\n/**\n * Data source for the Oscars view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class OscarsDataSource extends DataSource<OscarsItem> {\n  data: OscarsItem[] = [];\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n  \n  apiUrl = environment.apiUrl + '/oscars';\n\n  constructor(private http: HttpClient) {\n    super()\n\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<OscarsItem[]> {\n    if (this.paginator && this.sort) {\n      return merge(this.paginator.page, this.sort.sortChange)\n        .pipe(\n          startWith({}),\n          switchMap(x => this.getPagedData())\n        );\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  getPagedData(): Observable<OscarsItem[]> {\n    let params = new HttpParams()\n      .set(\"pageNo\", this.paginator.pageIndex.toString())\n      .set(\"pageSize\", this.paginator.pageSize.toString());\n    if (this.sort && this.sort.active && this.sort.direction !== '') {\n      params = params.append(\"sortBy\", this.sort.active + \",\" + this.sort.direction);\n      console.log(this.sort && this.sort.active != '');\n    }\n    return this.http.get<PaginatedItem>(this.apiUrl, {params: params})\n    .pipe(map(data => {\n      this.paginator.length = data.totalElements;\n      return data.content;\n    }))\n    \n  }\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n\n\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: OscarsItem[]): OscarsItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.title, b.title, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>Card Content Here</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: '/api',\n  ssoUrl: '/sso'  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n\n@Injectable()\nexport class AppService implements CanActivate {\n\n    authenticated = null;\n    roles = null;\n\n    constructor(private http: HttpClient, private router: Router) {\n        this.authenticate(null, null);\n    }\n\n    authenticate(credentials, callback) {\n\n        const headers = new HttpHeaders(credentials ? {\n            authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n        } : {});\n\n        this.http.get(environment.ssoUrl + '/user', { headers: headers }).subscribe(response => {\n            if (response && response['name']) {\n                this.authenticated = true;\n                this.roles = response['principal'].authorities.map((element) => {\n                    return element.authority.substr(5); \n                });                \n            } else {\n                this.authenticated = false;\n                this.roles = null;\n            }\n            console.log(this.authenticated);\n            console.log(this.roles);\n            return callback && callback();\n        });\n\n    }\n\n    logout() {\n        this.http.post(environment.ssoUrl + '/logout', {}).subscribe();\n        this.authenticated = false;\n        this.roles = null;\n        console.log(this.authenticated);\n    }\n\n    hasRole(role: String) {\n        return this.roles && this.roles.indexOf(role) !== -1;\n    }\n    \n    hasAnyRole(roles: String[]) {\n        return roles.filter(value => this.roles.includes(value)).length === 0\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.roles) {\n            if (route.data.role && this.hasRole(route.data.role)) {\n                return true;\n            } else {\n                this.router.navigate(['/']);\n                return false;\n            }\n        }\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\n\n// TODO: Replace this with your own data model type\nexport interface UsersItem {\n  username: string;\n  password: string;\n  enabled: boolean;\n  authorities: string[];\n}\n\n\n/**\n * Data source for the Users view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\n export class UsersDataSource extends DataSource<UsersItem> {\n  data: UsersItem[] = [];\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  apiUrl = environment.apiUrl + '/users';\n\n  constructor(private http: HttpClient) {\n    super()\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n   connect(): Observable<UsersItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(this.paginator.page, this.sort.sortChange,\n        this.http.get<UsersItem[]>(this.apiUrl, {\n          params: new HttpParams()\n            .set(\"pageNo\", this.paginator.pageIndex.toString())\n            .set(\"pageSize\", this.paginator.pageSize.toString())\n        }).pipe(map(data => this.data = data)))\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: UsersItem[]): UsersItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: UsersItem[]): UsersItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'username': return compare(a.username, b.username, isAsc);\n        case 'id': return compare(+a.enabled, +b.enabled, isAsc);\n        default: return 0;\n      }\n    });\n  }\n\n  public getItem(id: number): Observable<UsersItem> {\n    return this.http.get<UsersItem>(this.apiUrl + '/' + id);\n  }\n\n  public addItem(newItem: UsersItem) {\n    if (newItem.enabled === undefined)\n      newItem.enabled = false;\n    console.log(newItem);\n    return this.http.post<UsersItem>(this.apiUrl, newItem)\n      .pipe(\n        catchError(this.handleError),\n        map((savedItem) => {\n          this.data.push(savedItem);\n          this.paginator.page.emit();\n        })\n      );\n  }\n\n  public updateItem(updatedItem: UsersItem): Observable<void> {\n    console.log(updatedItem);\n    return this.http.put<UsersItem>(this.apiUrl + '/' + updatedItem.username, updatedItem)\n      .pipe(\n        catchError(this.handleError),\n        map((savedItem) => {\n          this.data = this.data.filter((value, key) => {\n            if(value.username == savedItem.username) {\n              value.enabled = savedItem.enabled;\n              value.password = savedItem.password;\n              value.authorities = savedItem.authorities;\n              this.paginator.page.emit();\n            }\n            return true;\n          })\n        }\n        )\n      );\n  }\n\n  deleteItem(deletedItem: UsersItem): Observable<void> {\n    return this.http.delete(this.apiUrl + '/' + deletedItem.username)\n      .pipe(\n        catchError(this.handleError),\n        map(() => {\n          this.data = this.data.filter((value) => {\n            return value.username != deletedItem.username;\n          });\n          this.paginator.page.emit();\n        })\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from './app.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n\n  constructor(public appService : AppService, public router : Router) {\n    \n  }\n}\n","<app-login *ngIf=\"appService.authenticated === false || router.url === '/login'\"></app-login>\n<app-nav *ngIf=\"appService.authenticated === true\"></app-nav>\n<div *ngIf=\"appService.authenticated !== true && appService.authenticated !== false\">Wait a moment ...</div>\n","import { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule, HttpClientXsrfModule, HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavComponent } from './nav/nav.component';\nimport { UsersComponent } from './users/users.component';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { UsersDialogComponent } from './users/users-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OscarsComponent } from './oscars/oscars.component';\nimport { DemoComponent } from './demo/demo.component';\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) {\n    \n  }\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest'),\n      withCredentials: true\n    });\n    return next.handle(xhr).pipe(\n      map((event: HttpEvent<any>) => event), // pass further respone\n      catchError((error: HttpErrorResponse) => {\n          // here will be catched error from response, just check if its 401\n          if (error && error.status == 401)\n            this.router.navigate(['login']);\n          return throwError(error);\n      }));\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    LoginComponent,\n    HomeComponent,\n    UsersComponent,\n    UsersDialogComponent,\n    OscarsComponent,\n    DemoComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatIconModule, \n    MatInputModule,\n    MatListModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'X-XSRF-TOKEN',\n    }),\n    MatGridListModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ],\n  providers: [AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { OscarsDataSource, OscarsItem } from './oscars-datasource';\n\n@Component({\n  selector: 'app-oscars',\n  templateUrl: './oscars.component.html',\n  styleUrls: ['./oscars.component.css']\n})\nexport class OscarsComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<OscarsItem>;\n  dataSource: OscarsDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'title', 'oscarYear', 'studio', 'award', 'yearOfRelease', 'movieTime', 'genre'];\n\n  constructor(private http: HttpClient) {\n    this.dataSource = new OscarsDataSource(http);\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n\n  onPageChange(event: PageEvent) {\n    console.log(event)\n    this.dataSource.paginator\n  }\n\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"oscarYear\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Oscar year</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.oscarYear}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"studio\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Studio</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.studio}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"award\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Award</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.award}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"yearOfRelease\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Year of release</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.yearOfRelease}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"movieTime\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Movie time</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.movieTime}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"genre\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Genre</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.genre}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [showFirstLastButtons]=\"true\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"15\"\n      [pageSizeOptions]=\"[5, 10, 15, 20]\">\n  </mat-paginator>\n</div>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver,\n    public appService: AppService) {}\n\n  logout() {\n    this.appService.logout();\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/home\">Home</a>\n      <a mat-list-item routerLink=\"/oscars\" *ngIf=\"appService.hasRole('USER')\">Oscars</a>\n      <a mat-list-item routerLink=\"/users\" *ngIf=\"appService.hasRole('ADMIN')\">Users</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Angular - Spring Boot - Roles Authorization</span>\n      <span class=\"spacer\"></span>\n      <button mat-icon-button aria-label=\"Logout\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Logout\" (click)=\"logout()\">logout</mat-icon>\n      </button>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { UsersDataSource, UsersItem } from './users-datasource';\nimport { UsersDialogComponent } from './users-dialog.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<UsersItem>;\n  dataSource: UsersDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['username', 'enabled', 'password', 'authorities', 'actions'];\n\n  constructor(private http: HttpClient, public dialog: MatDialog) {\n    this.dataSource = new UsersDataSource(http);\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n\n  openDialog(action: string, obj) {\n    obj.action = action;\n    const dialogRef = this.dialog.open(UsersDialogComponent, {\n      data:obj\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result.event == 'Add'){\n        this.dataSource.addItem(result.data).subscribe();\n      }else if(result.event == 'Update'){\n        this.dataSource.updateItem(result.data).subscribe();\n      }else if(result.event == 'Delete'){\n        this.dataSource.deleteItem(result.data).subscribe();\n      }\n    });\n  }\n\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <ng-container matColumnDef=\"username\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Username</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.username}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"enabled\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Enabled</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.enabled}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"password\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Password</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.password}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"authorities\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Authorities</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.authorities}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"openDialog('Add', {})\">\n          <mat-icon aria-label=\"Add\">add</mat-icon>\n        </button>      \n      </th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"openDialog('Update', row)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n        <button mat-icon-button matTooltip=\"Click to Delete\" class=\"iconbutton\" color=\"warn\" (click)=\"openDialog('Delete', row)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data?.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\">\n  </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppService } from './app.service';\nimport { UsersComponent } from './users/users.component';\nimport { OscarsComponent } from './oscars/oscars.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'users', component: UsersComponent,  canActivate: [AppService],  data: { role: \"ADMIN\" } },\n  { path: 'oscars', component: OscarsComponent,  canActivate: [AppService],  data: { role: \"USER\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Router } from '@angular/router';\nimport { Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    @Input() credentials = { username: 'user', password: '' };\n    error = false;\n\n    constructor(private app: AppService, private router: Router) {\n        app.authenticated = false;\n    }\n    ngOnInit(): void {\n    }\n\n    login() {\n        console.log(this.credentials);\n        this.app.authenticate(this.credentials, () => {\n            this.router.navigateByUrl('/');\n        });\n        return false;\n    }\n\n}","<form class=\"login-form-flex\">\n\t<mat-card>\n\t\t<mat-card-title>Login</mat-card-title>\n\t\t<mat-card-content>\n\t\t\t<mat-form-field class=\"full-width\">\n\t\t\t\t<input matInput placeholder=\"Username\" name=\"username\" [(ngModel)]=\"credentials.username\">\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-form-field class=\"full-width\">\n\t\t\t\t<input matInput placeholder=\"Password\" name=\"password\" [(ngModel)]=\"credentials.password\" type=\"password\">\n\t\t\t</mat-form-field>\n\t\t</mat-card-content>\n\t\t<mat-card-actions class=\"button-flex-container\">\n\t\t\t<button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>\n\t\t</mat-card-actions>\n\t</mat-card>\n</form>","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface DemoItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: DemoItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Demo view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class DemoDataSource extends DataSource<DemoItem> {\n  data: DemoItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<DemoItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: DemoItem[]): DemoItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: DemoItem[]): DemoItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}